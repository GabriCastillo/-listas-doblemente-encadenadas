Gabriel Castillo Salazar
Raul Doblas Fernandez
Javier Ramirez Rueda

Class: DequeNodeTest
    DequeNode<Integer> firstNode, middleNode, lastNode
    [1]-[2]-[3]

    Test: getItem()
    getItem(firstNode)  -> 1
    getItem(middleNode) -> 2
    getItem(lastNode)   -> 3

    Test: getNext()
    getNext(firstNode)  -> middleNode
    getNext(middleNode) -> lastNode
    getNext(lastNode)   -> null

    Test: getPrevious()
    getPrevious(firstNode)  -> null
    getPrevious(middleNode) -> firstNode
    getPrevious(lastNode)   -> middleNode

    Test: isFirstNode()
    isFirstNode(firstNode)  -> true
    isFirstNode(middleNode) -> false
    isFirstNode(lastNode)   -> false

    Test: isLastNode()
    isFirstNode(firstNode)  -> false
    isFirstNode(middleNode) -> false
    isFirstNode(lastNode)   -> true

    Test: isNotATerminalNode()
    isNotATerminalNode(firstNode)  -> false
    isNotATerminalNode(middleNode) -> true
    isNotATerminalNode(lastNode)   -> false

Class: DoubleLinkedListQueueTest
    DoubleLinkedListQueue<T> dobleListaEnlazada


    Test: getListAfterAppendLeftOfOneElement()
    dobleListaEnlazada.appendLeft(new DequeNode('x',null,null)).size() -> 1

    Test: getListAfterAppendOfOneElement()
    dobleListaEnlazada.append(new DequeNode('x',null,null)).size() -> 1

    Test: getListAfterAppendOfOneElement()
    dobleListaEnlazada.append(new DequeNode('x',null,null))
    .append(new DequeNode('y',null,null))
    .append(new DequeNode('w',null,null)).size() -> 3

    Test: raiseAnExceptionDeleteLastEmptyList()
    dobleListaEnlazada.deleteLast() -> error

    Test: getAEmptyListAfterDeleteFirst()
    dobleListaEnlazada.appendLeft(new DequeNode('x',null,null)).deleteFirst().size() -> 0

    Test: getAEmptyListAfterDeleteLast()
    dobleListaEnlazada.append(new DequeNode('x',null,null)).deleteLast().size() -> 0

    Test: raiseAnExceptionWhenDeleteFirstAnEmptyList()
    dobleListaEnlazada.deleteFirst() -> throws error

    Test: raiseAnExceptionWhenDeleteLastAnEmptyList()
    dobleListaEnlazada.deleteLast() -> throws error

    Test: raiseAnExceptionWhenGetANodeOutOfBounds()
    dobleListaEnlazada.getAt(n+1) -> throws error

    Test: raiseAnExceptionWhenGetAtOnAEmptyList()
    dobleListaEnlazada.getAt(2) -> throws error

    Test: getThirdNodeOfALinkedList()
    dobleListaEnlazada.getAt(3) -> DequeNode(3,null,null)

    Test: getFirstNodeOfALinkedList()
    dobleListaEnlazada.getAt(1) -> DequeNode(1,null,null)


    // Complex operations

    Test: getAt(int position)
        from [],          getAt(1)  -> error
        from [1],         getAt()   -> error
        from [1]-[2]-[3], getAt(1)  -> [1]
        from [1]-[2]-[3], getAt(2)  -> [2]
        from [1]-[2]-[3], getAt(3)  -> [3]
        from [1]-[2]-[3], find(4)   -> error


    Test: findItem(T item)
        from [],          find(1)  -> error
        from [1],         find()   -> error
        from [1]-[2]-[3], find(1)  -> [1]
        from [1]-[2]-[3], find(2)  -> [2]
        from [1]-[2]-[3], find(3)  -> [3]
        from [1]-[2]-[3], find(4)  -> null


    Test: delete()
         from [],          delete([])   -> error
         from [1],         delete([1])  -> []
         from [1]-[2]-[3], delete([1])  -> [2]-[3]
         from [1]-[2]-[3], delete([2])  -> [1]-[3]
         from [1]-[2]-[3], delete([3])  -> [1]-[2]


    Test: sort(Comparator <T> comparator)
        from [],          sort(comparator)   -> error
        from [2]-[1]-[3], sort(comparator)   -> [1]-[2]-[3]

